import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def plot_vectors_3d(vector_data):
    """
    Plot 3D vectors based on their starting and ending positions and colors.

    :param vector_data: List of tuples, where each tuple contains
                        ((x_start, y_start, z_start), (x_end, y_end, z_end), 'color')
    """
    fig = plt.figure(figsize=(8, 8))
    ax = fig.add_subplot(111, projection='3d')

    for data in vector_data:
        start, end, color = data
        x_start, y_start, z_start = start
        x_end, y_end, z_end = end

        # Calculate the vector components
        dx = x_end - x_start
        dy = y_end - y_start
        dz = z_end - z_start

        # Plot the vector
        ax.quiver(x_start, y_start, z_start, dx, dy, dz, color=color)

    # Set plot limits for better visualization
    all_x = [x for (start, end, _) in vector_data for x, _, _ in (start, end)]
    all_y = [y for (start, end, _) in vector_data for _, y, _ in (start, end)]
    all_z = [z for (start, end, _) in vector_data for _, _, z in (start, end)]

    ax.set_xlim(min(all_x) - 1, max(all_x) + 1)
    ax.set_ylim(min(all_y) - 1, max(all_y) + 1)
    ax.set_zlim(min(all_z) - 1, max(all_z) + 1)

    ax.set_xlabel('X-axis')
    ax.set_ylabel('Y-axis')
    ax.set_zlabel('Z-axis')
    ax.set_title('3D Vector Plot')
    plt.show()

# Example usage:
vector_data = [
((-1.236010, 0.368006, 2.713990), (-0.425615, -1.245548, 1.067845), 'r'),
((-0.425615, -1.245548, 1.067845), (-1.276844, -0.738644, 1.203536), 'b'),
((-0.425615, -1.245548, 1.067845), (0.077518, -1.817452, 0.622420), 'r'),
((0.077518, -1.817452, 0.622420), (-0.077518, -1.180548, 1.377579), 'b'),
((0.077518, -1.817452, 0.622420), (0.316528, -2.000000, 0.530376), 'r'),
((0.316528, -2.000000, 0.530376), (0.316528, -1.000000, 0.530376), 'b'),
((0.316528, -2.000000, 0.530376), (0.185633, -1.812440, 0.657533), 'r'),
((0.185633, -1.812440, 0.657533), (0.556898, -2.439321, -0.027401), 'b'),
((0.185633, -1.812440, 0.657533), (-0.298469, -1.118773, 1.127805), 'r'),
((-0.298469, -1.118773, 1.127805), (0.298469, -1.879227, 0.872194), 'b'),
((-0.298469, -1.118773, 1.127805), (-1.607917, 0.907192, 2.911262), 'g'),
((-0.298469, -1.118773, 1.127805), (-0.895406, -0.358318, 1.383416), 'b'),

((0.316528, -2.000000, 0.530376), (-0.183667, -1.283272, 1.016283), 'r'),
((0.316410, -2.000000, 0.530101), (0.322109, -1.605952, -0.388971), 'r'),
((0.316360, -2.000000, 0.530113), (0.508810, -1.801661, -0.430940), 'r'),
((0.316378, -2.000000, 0.530275), (-0.239916, -1.462169, 1.163737), 'r'),
((0.316862, -2.000000, 0.530609), (0.345146, -1.102004, 0.969703), 'r'),
((0.316434, -2.000000, 0.530255), (-0.538650, -1.588219, 0.845323), 'r'),
((0.316939, -2.000000, 0.530642), (0.417755, -1.072970, 0.891822), 'r'),
((0.316417, -2.000000, 0.530266), (-0.425396, -1.531621, 1.010198), 'r'),
((0.316770, -2.000000, 0.530435), (-0.166767, -1.124978, 0.507445), 'r'),
((0.317057, -2.000000, 0.530537), (0.195849, -1.090574, 0.132727), 'r'),
((0.315940, -2.000000, 0.529900), (1.033120, -1.307456, 0.607597), 'r'),
((0.316834, -2.000000, 0.530443), (-0.128272, -1.123473, 0.347191), 'r'),
((0.316228, -2.000000, 0.530153), (0.029012, -1.721147, 1.446530), 'r'),
((0.316797, -2.000000, 0.530472), (-0.102314, -1.093733, 0.585480), 'r'),
((0.316482, -2.000000, 0.530170), (-0.100230, -1.655671, -0.311132), 'r'),
((0.317207, -2.000000, 0.530733), (0.779551, -1.113329, 0.523539), 'r'),
((0.316644, -2.000000, 0.530465), (0.012631, -1.173880, 1.004913), 'r'),
((0.316745, -2.000000, 0.530506), (0.036561, -1.100199, 0.864952), 'r'),
((0.316872, -2.000000, 0.530376), (0.283396, -1.287983, -0.170988), 'r'),
((0.316873, -2.000000, 0.530585), (0.282642, -1.044035, 0.822063), 'r'),
((0.316272, -2.000000, 0.530098), (1.294686, -1.897435, 0.350695), 'r'),
((0.316533, -2.000000, 0.530383), (-0.166363, -1.289296, 1.041959), 'r'),
((0.316914, -2.000000, 0.530532), (0.097714, -1.024512, 0.511173), 'r'),
((0.317105, -2.000000, 0.530727), (0.689742, -1.113556, 0.805244), 'r'),
((0.316784, -2.000000, 0.530475), (-0.049349, -1.073674, 0.619169), 'r'),
((0.316175, -2.000000, 0.530028), (1.244207, -1.667700, 0.361701), 'r'),
((0.316931, -2.000000, 0.530543), (0.154468, -1.013550, 0.507683), 'r'),
((0.316442, -2.000000, 0.530216), (-0.623780, -1.669250, 0.449054), 'r'),
((0.315976, -2.000000, 0.530038), (0.549701, -1.402615, 1.297178), 'r'),
((0.316881, -2.000000, 0.530547), (0.132076, -1.024151, 0.647020), 'r'),
((0.316694, -2.000000, 0.530373), (-0.356236, -1.263762, 0.458831), 'r'),
((0.317245, -2.000000, 0.530811), (0.913355, -1.247436, 0.810635), 'r'),
((0.317414, -2.000000, 0.530768), (0.675867, -1.226425, 0.008185), 'r'),
((0.317037, -2.000000, 0.530598), (0.363139, -1.003642, 0.458872), 'r'),
((0.316919, -2.000000, 0.530481), (-0.000411, -1.086776, 0.274894), 'r'),
((0.316207, -2.000000, 0.530188), (0.156824, -1.500434, 1.381675), 'r'),
((0.317260, -2.000000, 0.530715), (0.676026, -1.091950, 0.314541), 'r'),
((0.316446, -2.000000, 0.530186), (-0.488493, -1.740257, -0.003300), 'r'),
((0.316285, -2.000000, 0.530066), (0.982488, -1.739537, -0.168742), 'r'),
((0.316575, -2.000000, 0.530185), (0.132276, -1.423220, -0.265653), 'r'),
((0.316385, -2.000000, 0.530136), (0.038286, -1.803381, -0.410078), 'r'),
((0.316520, -2.000000, 0.530364), (-0.227009, -1.298740, 0.991678), 'r'),
((0.317005, -2.000000, 0.530634), (0.440615, -1.016728, 0.664414), 'r'),
((0.317281, -2.000000, 0.530767), (0.867306, -1.167730, 0.461492), 'r'),
((0.316961, -2.000000, 0.530672), (0.474866, -1.111429, 0.961378), 'r'),
((0.316812, -2.000000, 0.530461), (-0.135511, -1.109320, 0.484709), 'r'),
((0.317044, -2.000000, 0.530589), (0.293472, -1.009571, 0.394591), 'r'),
((0.317238, -2.000000, 0.530676), (0.575130, -1.085167, 0.219916), 'r'),
((0.316525, -2.000000, 0.530189), (-0.160971, -1.586693, -0.245166), 'r'),
((0.316337, -2.000000, 0.530017), (0.456603, -1.384041, -0.245173), 'r'),
((0.316962, -2.000000, 0.530564), (0.212318, -1.005735, 0.508512), 'r'),
((0.316396, -2.000000, 0.530097), (0.481897, -1.612193, -0.376664), 'r'),
((0.316960, -2.000000, 0.530637), (0.439111, -1.045496, 0.802669), 'r'),
((0.316561, -2.000000, 0.530195), (-0.028825, -1.528908, -0.281458), 'r'),
((0.317301, -2.000000, 0.530749), (0.762216, -1.129252, 0.321348), 'r'),
((0.316256, -2.000000, 0.530008), (0.822299, -1.569401, -0.217324), 'r'),
((0.317483, -2.000000, 0.530804), (0.631816, -1.274739, -0.081725), 'r'),
((0.316936, -2.000000, 0.530455), (-0.030941, -1.165705, 0.102747), 'r'),
((0.316967, -2.000000, 0.530685), (0.470496, -1.155834, 1.044312), 'r'),
((0.316602, -2.000000, 0.530416), (-0.151820, -1.212931, 0.931794), 'r'),
((0.316857, -2.000000, 0.530394), (-0.050700, -1.216466, 0.029418), 'r'),
((0.316103, -2.000000, 0.530024), (1.207549, -1.621331, 0.778890), 'r'),
((0.316396, -2.000000, 0.530076), (0.473490, -1.521416, -0.333799), 'r'),
((0.316609, -2.000000, 0.530278), (-0.429765, -1.463545, 0.136397), 'r'),
((0.317034, -2.000000, 0.530534), (0.172032, -1.063720, 0.210605), 'r'),
((0.316207, -2.000000, 0.530158), (0.197886, -1.630835, 1.451959), 'r'),
((0.316287, -2.000000, 0.530131), (-0.392151, -1.941357, 1.233464), 'r'),
((0.316746, -2.000000, 0.530347), (-0.234913, -1.266579, 0.133149), 'r'),
((0.316110, -2.000000, 0.529957), (1.130602, -1.507100, 0.223928), 'r'),
((0.316645, -2.000000, 0.530486), (0.192379, -1.235368, 1.162859), 'r'),
((0.317053, -2.000000, 0.530674), (0.567788, -1.048943, 0.711290), 'r'),
((0.316053, -2.000000, 0.529957), (1.156322, -1.460198, 0.479340), 'r'),
((0.317403, -2.000000, 0.530792), (0.842445, -1.238434, 0.150861), 'r'),
((0.316866, -2.000000, 0.530464), (-0.127059, -1.120877, 0.357048), 'r'),
((0.316412, -2.000000, 0.530332), (0.083867, -1.332159, 1.237376), 'r'),
((0.317357, -2.000000, 0.530780), (0.838916, -1.183650, 0.282690), 'r'),
((0.316291, -2.000000, 0.530064), (0.855534, -1.751754, -0.274666), 'r'),
((0.316497, -2.000000, 0.530304), (-0.438755, -1.409073, 0.813851), 'r'),
((0.316423, -2.000000, 0.530120), (0.224765, -1.664357, -0.407400), 'r'),
((0.316949, -2.000000, 0.530618), (0.398543, -1.025384, 0.739101), 'r'),
((0.316545, -2.000000, 0.530401), (-0.092536, -1.253436, 1.055086), 'r'),
((0.317086, -2.000000, 0.530587), (0.357131, -1.033468, 0.277184), 'r'),
((0.316809, -2.000000, 0.530477), (-0.104762, -1.094322, 0.575483), 'r'),
((0.316828, -2.000000, 0.530501), (0.012825, -1.051749, 0.622162), 'r'),
((0.316069, -2.000000, 0.529960), (1.174951, -1.499809, 0.419817), 'r'),
((0.316313, -2.000000, 0.530175), (-0.441149, -1.790906, 1.148666), 'r'),
((-0.143720, -0.831468, -2.000000), (-0.914146, -0.204469, -1.884609), 'r'),
((0.316536, -2.000000, 0.530208), (-0.278281, -1.604184, -0.169450), 'r'),
((0.316347, -2.000000, 0.530094), (0.475634, -1.748083, -0.424456), 'r'),
((0.316822, -2.000000, 0.530502), (-0.006698, -1.059385, 0.633353), 'r'),
((0.316296, -2.000000, 0.530209), (-0.222186, -1.594985, 1.269127), 'r'),
((0.316679, -2.000000, 0.530384), (-0.324938, -1.233292, 0.552449), 'r'),
((0.317065, -2.000000, 0.530599), (0.356312, -1.011630, 0.383684), 'r'),
((0.317179, -2.000000, 0.530696), (0.673174, -1.069082, 0.449091), 'r'),
((0.317261, -2.000000, 0.530700), (0.615958, -1.088360, 0.248401), 'r'),
((0.317191, -2.000000, 0.530643), (0.471881, -1.066260, 0.207844), 'r'),
((0.316359, -2.000000, 0.530244), (-0.351321, -1.552677, 1.125312), 'r'),
((0.317055, -2.000000, 0.530515), (0.207725, -1.159543, -0.000219), 'r'),
((0.317110, -2.000000, 0.530668), (0.601383, -1.041384, 0.515039), 'r'),

]

plot_vectors_3d(vector_data)
