#version 460

#include "common_defines.h"

layout (set = MATERIAL_SORT_COMPUTE_OFFSETS_LAYOUT_INDEX, binding = MATERIAL_SORT_MATERIALS_COUNT_PER_CHUNK_BUFFER) buffer MaterialsCountPerChunkBufferObject
{
    uint MaterialsCountPerChunk[];
};

layout (set = MATERIAL_SORT_COMPUTE_OFFSETS_LAYOUT_INDEX, binding = MATERIAL_SORT_TOTAL_MATERIAL_OFFSETS_BUFFER) buffer MaterialsOffsetsBufferObject
{
    uint MaterialOffsets[];
};

layout (push_constant) uniform PushConstantsBlock
{
    uint GroupCount;
};

layout (local_size_x = TOTAL_MATERIALS, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint MaterialIndex = gl_GlobalInvocationID.x;

/// TODO: Perhapse redundutch check...
    if (MaterialIndex >= TOTAL_MATERIALS)
    {
        return;
    }

    MaterialOffsets[MaterialIndex] = 0u;

    for (uint i = 1u; i < GroupCount; ++i)
    {
        MaterialOffsets[MaterialIndex] = MaterialOffsets[MaterialIndex] + MaterialsCountPerChunk[MaterialIndex + (i * TOTAL_MATERIALS)];
    }
}